{"version":3,"sources":["store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","history.js","components/layout/SignedInLink.js","store/action/authActions.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/projects/ProjetSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","utils/Api.js","components/profile/Profile.js","components/profile/ProfilebyID.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","App.js","serviceWorker.js","index.js"],"names":["initState","IsAuth","localStorage","getItem","authReducer","state","action","type","console","log","projects","id","title","content","projectReducer","rootReducer","combineReducers","auth","project","createBrowserHistory","connect","dispatch","signOut","removeItem","props","className","to","href","onClick","SignedOutLinks","links","SignedInLink","SignedOutLink","ProjectSummary","author","ProjectList","map","key","Dashboard","this","React","Component","ProjectDetails","project_details","match","params","setState","userid","url","UserRegister","username","email","password","a","axios","post","token","get","headers","Authorization","Profile","GetProfile","then","response","data","ProfilebyID","SignIn","handleChange","e","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","creds","credentials","setItem","catch","err","SignUp","history","push","error","alert","CreateProject","App","exact","path","component","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.77253cd9.chunk.js","sourcesContent":["const checkToken = (localStorage.getItem('token') !== null);\n\nconst initState = {\n  IsAuth: checkToken,\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      console.log('login sucess');\n      return {\n        ...state,\n        IsAuth: true,\n      };\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        IsAuth: false,\n      };\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return {\n        ...state,\n        IsAuth: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: '1', title: 'Zbeub', content: 'Lorem' },\n    { id: '2', title: 'Zbaub', content: 'Lorem' },\n    { id: '3', title: 'Zboub', content: 'Lorem' },\n  ],\n};\n\nconst projectReducer = (state = initState, action) => state;\n\nexport default projectReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n});\n\nexport default rootReducer;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/action/authActions';\n\nconst SignedInLinks = (props) => (\n  <ul className=\"right\">\n    <li><NavLink to=\"/create\">New content</NavLink></li>\n    <li><a href=\"/signin\" onClick={props.signOut}>Log Out</a></li>\n    <li><NavLink to=\"/profile\" className=\"btn btn-floating pink lighten-1\">PRFL</NavLink></li>\n  </ul>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  signOut: () => dispatch(signOut()),\n});\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","import axios from 'axios';\n\nexport const signIn = (credentials) => (dispatch) => axios.post('https://fs1-cocolito-server.herokuapp.com/users/login', {\n  email: credentials.email,\n  password: credentials.password,\n}).then((response) => {\n  localStorage.setItem('token', response.data.token);\n  localStorage.setItem('id', response.data.id);\n  dispatch({ type: 'LOGIN_SUCCESS' });\n}).catch((err) => {\n  dispatch({ type: 'LOGIN_ERROR', err });\n});\n\nexport const signOut = () => (dispatch) => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('id');\n  dispatch({ type: 'SIGNOUT_SUCCES' });\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => (\n  <ul className=\"right\">\n    <li><NavLink to=\"/signup\">Signup</NavLink></li>\n    <li><NavLink to=\"/signin\">Login</NavLink></li>\n  </ul>\n);\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SignedInLinks from './SignedInLink';\nimport SignedOutLinks from './SignedOutLink';\n\nconst Navigation = (props) => {\n  const { auth } = props;\n  console.log(auth.auth);\n  const links = auth.auth.IsAuth ? <SignedInLinks /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">Cocolito</Link>\n        { links }\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state,\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\n\nconst ProjectSummary = ({ project }) => (\n  <div className=\"card z-depth-0 project-summary\">\n    <div className=\"card-content green-text text-darken-3\">\n      <span className=\"card-title\">{project.title}</span>\n      <p>\n        Posted by\n        {project.author}\n      </p>\n      <p className=\"grey-text\">3rd September, 2am</p>\n    </div>\n  </div>\n);\n\nexport default ProjectSummary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectSummary from './ProjetSummary';\n\nconst ProjectList = ({ projects }) => (\n  <div className=\"project-list section\">\n    { projects && projects.map((project) => (\n      <Link to={`/project/${project.id}`} key={project.id}>\n        <ProjectSummary project={project} />\n      </Link>\n    ))}\n  </div>\n);\n\nexport default ProjectList;\n","import React from 'react';\nimport ProjectList from '../projects/ProjectList';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [\n        {\n          id: '10', title: 'Kikou', content: 'Lorem', author: 'Akisen',\n        },\n        {\n          id: '20', title: 'Zbaub', content: 'Lorem', author: 'Quentin',\n        },\n        {\n          id: '30', title: 'Zboub', content: 'Lorem', author: 'Quantify',\n        },\n      ],\n    };\n  }\n\n  render() {\n    const projects = this.state;\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <ProjectList projects={projects.projects} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ProjectDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      project_details: {},\n    };\n  }\n\n  componentDidMount() {\n    // API CALL FOR DATA avec l'id du poste const { id } = this.props.match.params\n    const { id } = this.props.match.params;\n    this.setState({\n      project_details: {\n        id, title: 'Ma journée', content: 'Bonjour tout le monde', author: 'Akisen', userid: '45',\n      },\n    });\n  }\n\n  render() {\n    const project = this.state;\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">\n              {project.project_details.title}\n              -\n              {project.project_details.id}\n            </span>\n            <p>{project.project_details.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 green-text\">\n            <Link to={`/profile/${project.project_details.userid}`} key={project.project_details.userid}>\n              <div>\n                Posted by\n                {project.project_details.author}\n              </div>\n            </Link>\n            <div>2nd September, 2am</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectDetails;\n","import axios from 'axios';\n\nconst url = 'https://fs1-cocolito-server.herokuapp.com';\n\nexport async function UserLogin(email, password) {\n  return await axios.post(`${url}/users/login`, {\n    email,\n    password,\n  });\n}\n\nexport async function UserRegister(username, email, password) {\n  return await axios.post(`${url}/users/register`, {\n    username,\n    email,\n    password,\n  });\n}\n\nexport async function GetProfile() {\n  const token = localStorage.getItem('token');\n  return await axios.get(`${url}/users/profile`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n","import React from 'react';\nimport { GetProfile } from '../../utils/Api';\n\nclass Profile extends React.Component {\n    state = {\n        username: '',\n        id: '',\n        email: ''\n    }\n\n    componentDidMount() {\n        GetProfile().then((response) => {\n            this.setState({\n                username: response.data.username,\n                id: response.data.id,\n                email: response.data.email,\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Mon profile</h1>\n                    <h5>Username : {this.state.username}</h5>\n                    <h5>Id : {this.state.id}</h5>\n                    <h5>Email : {this.state.email}</h5>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile;\n","import React from 'react';\n\nclass ProfilebyID extends React.Component {\n  render() {\n    const { id } = this.props.match.params;\n    return (\n      <div>\n        Profile -\n        { id }\n      </div>\n    );\n  }\n}\n\nexport default ProfilebyID;\n","import React from 'react';\n//import history from '../../history';\nimport { connect } from 'react-redux';\nimport { signIn } from \"../../store/action/authActions\";\n\nclass SignIn extends React.Component {\n    state = {\n      email: '',\n      password: '',\n    }\n\n    handleChange = (e) => {\n      this.setState({\n          [e.target.id]: e.target.value\n      })\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.signIn(this.state);\n      //history.push('/profile');\n    }\n\n    render() {\n      return (\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            </div>\n          </form>\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return state;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from 'react';\nimport { UserRegister } from '../../utils/Api';\nimport history from '../../history';\n\nclass SignUp extends React.Component {\n    state = {\n        email: '',\n        username: '',\n        password: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        UserRegister(this.state.username, this.state.email, this.state.password).then((response) =>{\n            history.push('/signin');\n        }).catch((error) => {\n            alert(error);\n        })\n        //console.log(this.state);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" id=\"username\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import React from 'react';\n\nclass CreateProject extends React.Component {\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default CreateProject;\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport history from './history';\nimport Navigation from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport Profile from './components/profile/Profile';\nimport ProfilebyID from './components/profile/ProfilebyID';\n// eslint-disable-next-line import/no-named-as-default,import/no-named-as-default-member\nimport SignIn from './components/auth/SignIn';\n// eslint-disable-next-line import/no-named-as-default,import/no-named-as-default-member\nimport SignUp from './components/auth/SignUp';\n// eslint-disable-next-line import/no-named-as-default,import/no-named-as-default-member\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <div>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route path=\"/profile/:id\" component={ProfilebyID} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}